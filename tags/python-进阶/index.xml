<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>python 进阶 - 标签 - LoveIt</title>
        <link>https://hotttao.github.io/tags/python-%E8%BF%9B%E9%98%B6/</link>
        <description>python 进阶 - 标签 - LoveIt</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1556824234@qq.com (宋涛)</managingEditor>
            <webMaster>1556824234@qq.com (宋涛)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 21 Jan 2018 22:00:00 &#43;0800</lastBuildDate><atom:link href="https://hotttao.github.io/tags/python-%E8%BF%9B%E9%98%B6/" rel="self" type="application/rss+xml" /><item>
    <title>类元编程</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/21_prepare/</link>
    <pubDate>Sun, 21 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/21_prepare/</guid>
    <description><![CDATA[本章内容: 类工厂 元类 exec 函数 类装饰器 导入时和运行时 类作为对象 1. 对象之间的关系 元类: 定义: 创建类的类，类是元类的实例 特性: 超类的元类会被子类继承]]></description>
</item><item>
    <title>属性描述符</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/20_descriptor/</link>
    <pubDate>Sat, 20 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/20_descriptor/</guid>
    <description><![CDATA[本章内容 描述符协议 描述符与属性覆盖 方法与特性 描述符使用建议 描述符使用示例 1. 描述符与描述符协议 1.1 描述符概述 定义: 是实现了特定协议的类 &ndash; 描述符协]]></description>
</item><item>
    <title>自省</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/19_dynamic/</link>
    <pubDate>Fri, 19 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/19_dynamic/</guid>
    <description><![CDATA[6.1 Python 术语 属性：数据的属性和处理数据的方法统称属性 特性：property，在不改变类接口的前提下，使用存取方法（即读值方法和设值方法）修改数据]]></description>
</item><item>
    <title>asyncio</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/18_asyncio/</link>
    <pubDate>Thu, 18 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/18_asyncio/</guid>
    <description><![CDATA[1. 操作系统知识 1.1 并发与并行 并行: 在某一时间点, 存在多于一个进程在运行 并发: 在某一段时间, 存在多于一个进程在运行 1.2 I/O 模型 同步阻塞I/O 同步非阻]]></description>
</item><item>
    <title>futrue</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/17_future/</link>
    <pubDate>Wed, 17 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/17_future/</guid>
    <description><![CDATA[1. futrue 的概念 1.1 对 futrue 的理解 期物： 包括： concurrent.futures.Future 类 asyncio.Future 类 Twisted 的 Deferred 类 Tornado 的 Future 类 作用： 指一种对象, 表示异步执行的操作 类的实例表示可能已经完成或者尚未完成的延迟计算]]></description>
</item><item>
    <title>协程</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/16_coroutine/</link>
    <pubDate>Tue, 16 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/16_coroutine/</guid>
    <description><![CDATA[1. 协程的概念 1.1 对协程的理解 协程理解： 协程是用户空间的线程，编程语言必需提供接口实现线程调度 python 中 yield 是一种流程控制工具，使用它可以实现协程 生成器]]></description>
</item><item>
    <title>上下文管理器和 else 块</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/15_contextmanager/</link>
    <pubDate>Mon, 15 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/15_contextmanager/</guid>
    <description><![CDATA[本章内容 for、while 和 try 语句的 else 子句 EAFP 与 LBYL 上下文管理器协议 with 语句和上下文管理器 contextlib 模块 1. else 子句 作用： 能让代码更易于阅读 不用设置控制标志或]]></description>
</item><item>
    <title>迭代器和生成器</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/14_iterator/</link>
    <pubDate>Sun, 14 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/14_iterator/</guid>
    <description><![CDATA[当我在自己的程序中发现用到了模式，我觉得这就表明某个地方出错了。程序的形式应该仅仅反映它所要解决的问题。代码中其他任何外加的形式都是一个信号]]></description>
</item><item>
    <title>运算符重载</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/13_overload/</link>
    <pubDate>Sat, 13 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/13_overload/</guid>
    <description><![CDATA[本章将讨论: Python 如何处理中缀运算符中不同类型的操作数 使用鸭子类型或显式类型检查处理不同类型的操作数 中缀运算符如何表明自己无法处理操作数 众多比较]]></description>
</item><item>
    <title>继承</title>
    <link>https://hotttao.github.io/posts/program/python/grammar/fluent-python/12_inherit/</link>
    <pubDate>Fri, 12 Jan 2018 22:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hotttao.github.io/posts/program/python/grammar/fluent-python/12_inherit/</guid>
    <description><![CDATA[本章重点 子类化内置类型的缺点 多重继承和方法解析顺序 讨论构建类层次结构方面好的做法和不好的做法 1. 子类化内置类型 版本差异: 在 Python 2.2 之前，内置类型（]]></description>
</item></channel>
</rss>
